# Generated by Django 3.1.7 on 2021-03-12 16:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Andrid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_order', models.IntegerField(default=0, verbose_name='week_order')),
                ('_id', models.BigIntegerField(default=-1, verbose_name='_id')),
                ('created', models.DateTimeField(db_index=True, editable=False, verbose_name='created')),
            ],
        ),
        migrations.CreateModel(
            name='Animation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('width', models.IntegerField(verbose_name='width')),
                ('height', models.IntegerField(verbose_name='height')),
                ('duration', models.IntegerField(verbose_name='duration')),
                ('file_name', models.TextField(blank=True, verbose_name='file_name')),
                ('mime_type', models.TextField(blank=True, verbose_name='mime_type')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('duration', models.IntegerField(verbose_name='duration')),
                ('performer', models.TextField(blank=True, verbose_name='performer')),
                ('title', models.TextField(blank=True, verbose_name='title')),
                ('file_name', models.TextField(blank=True, verbose_name='file_name')),
                ('mime_type', models.TextField(blank=True, verbose_name='mime_type')),
                ('file_size', models.IntegerField(blank=True, verbose_name='duration')),
            ],
        ),
        migrations.CreateModel(
            name='CallbackQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callback_query_id', models.TextField(verbose_name='callback_query_id')),
                ('inline_message_id', models.TextField(blank=True, verbose_name='inline_message_id')),
                ('chat_instance', models.TextField(blank=True, verbose_name='chat_instance')),
                ('data', models.TextField(blank=True, verbose_name='data')),
                ('game_short_name', models.TextField(blank=True, verbose_name='game_short_name')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.BigIntegerField(verbose_name='chat_id')),
                ('type', models.TextField(verbose_name='type')),
                ('title', models.TextField(blank=True, verbose_name='type')),
                ('username', models.TextField(blank=True, verbose_name='username')),
                ('first_name', models.TextField(blank=True, verbose_name='first_name')),
                ('last_name', models.TextField(blank=True, verbose_name='last_name')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('invite_link', models.TextField(blank=True, verbose_name='invite_link')),
                ('slow_mode_delay', models.IntegerField(blank=True, verbose_name='slow_mode_delay')),
                ('sticker_set_name', models.TextField(blank=True, verbose_name='sticker_set_name')),
                ('can_set_sticker_set', models.BooleanField(blank=True, verbose_name='can_set_sticker_set')),
                ('linked_chat_id', models.BigIntegerField(blank=True, verbose_name='linked_chat_id')),
            ],
        ),
        migrations.CreateModel(
            name='ChatLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=64, verbose_name='address')),
                ('chat', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.chat')),
            ],
        ),
        migrations.CreateModel(
            name='ChosenInlineResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_id', models.TextField(verbose_name='result_id')),
                ('query', models.TextField(verbose_name='query')),
                ('inline_message_id', models.TextField(blank=True, verbose_name='inline_message_id')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('file_name', models.TextField(blank=True, verbose_name='file_name')),
                ('mime_type', models.TextField(blank=True, verbose_name='mime_type')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
            ],
        ),
        migrations.CreateModel(
            name='EncryptedPassportElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(verbose_name='type')),
                ('data', models.TextField(blank=True, verbose_name='data')),
                ('phone_number', models.TextField(blank=True, verbose_name='phone_number')),
                ('email', models.TextField(blank=True, verbose_name='email')),
                ('hash', models.TextField(verbose_name='hash')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('text', models.CharField(blank=True, max_length=4096, verbose_name='text')),
            ],
        ),
        migrations.CreateModel(
            name='InlineKeyboardButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='text')),
                ('url', models.TextField(blank=True, verbose_name='url')),
                ('callback_data', models.CharField(blank=True, max_length=64, verbose_name='callback_data')),
                ('switch_inline_query', models.TextField(blank=True, verbose_name='switch_inline_query')),
                ('switch_inline_query_current_chat', models.TextField(blank=True, verbose_name='switch_inline_query_current_chat')),
                ('pay', models.BooleanField(blank=True, verbose_name='pay')),
                ('buttons', models.ManyToManyField(blank=True, related_name='_inlinekeyboardbutton_buttons_+', to='andr_update.InlineKeyboardButton')),
            ],
        ),
        migrations.CreateModel(
            name='InlineQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inline_query_id', models.TextField(verbose_name='inline_query_id')),
                ('query', models.TextField(verbose_name='query')),
                ('offset', models.TextField(verbose_name='offset')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.IntegerField(verbose_name='message_id')),
                ('date', models.IntegerField(verbose_name='date')),
                ('forward_from_message_id', models.IntegerField(blank=True, verbose_name='forward_from_message_id')),
                ('forward_signature', models.TextField(blank=True, verbose_name='forward_signature')),
                ('forward_sender_name', models.TextField(blank=True, verbose_name='forward_sender_name')),
                ('forward_date', models.IntegerField(blank=True, verbose_name='forward_date')),
                ('edit_date', models.IntegerField(blank=True, verbose_name='edit_date')),
                ('media_group_id', models.TextField(blank=True, verbose_name='media_group_id')),
                ('author_signature', models.TextField(blank=True, verbose_name='author_signature')),
                ('text', models.CharField(blank=True, max_length=4096, verbose_name='text')),
                ('caption', models.CharField(blank=True, max_length=1024, verbose_name='caption')),
                ('new_chat_title', models.TextField(blank=True, verbose_name='new_chat_title')),
                ('delete_chat_photo', models.BooleanField(blank=True, verbose_name='delete_chat_photo')),
                ('group_chat_created', models.BooleanField(blank=True, verbose_name='group_chat_created')),
                ('supergroup_chat_created', models.BooleanField(blank=True, verbose_name='supergroup_chat_created')),
                ('channel_chat_created', models.BooleanField(blank=True, verbose_name='channel_chat_created')),
                ('migrate_to_chat_id', models.BigIntegerField(blank=True, verbose_name='migrate_to_chat_id')),
                ('migrate_from_chat_id', models.BigIntegerField(blank=True, verbose_name='migrate_from_chat_id')),
                ('connected_website', models.TextField(blank=True, verbose_name='connected_website')),
                ('callbackquery', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to='andr_update.callbackquery')),
                ('pinned_message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='andr_update.message')),
                ('reply_to_message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='andr_update.message')),
                ('this_pinned_message_chat', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='pinned_message', to='andr_update.chat')),
            ],
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('phone_number', models.TextField(verbose_name='phone_number')),
                ('email', models.TextField(verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='PreCheckoutQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_checkout_query_id', models.TextField(verbose_name='pre_checkout_query_id')),
                ('total_amount', models.IntegerField(verbose_name='total_amount')),
                ('currency', models.TextField(verbose_name='currency')),
                ('invoice_payload', models.TextField(verbose_name='invoice_payload')),
                ('shipping_option_id', models.TextField(blank=True, verbose_name='shipping_option_id')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_query_id', models.TextField(verbose_name='id')),
                ('invoice_payload', models.TextField(verbose_name='invoice_payload')),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('andr_id', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, primary_key=True, related_name='update', serialize=False, to='andr_update.andrid')),
            ],
        ),
        migrations.CreateModel(
            name='Voice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('duration', models.IntegerField(verbose_name='duration')),
                ('mime_type', models.TextField(blank=True, verbose_name='mime_type')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='voice', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='VideoNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('length', models.IntegerField(verbose_name='length')),
                ('duration', models.IntegerField(verbose_name='duration')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_note', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('width', models.IntegerField(verbose_name='width')),
                ('height', models.IntegerField(verbose_name='height')),
                ('duration', models.IntegerField(verbose_name='duration')),
                ('file_name', models.TextField(blank=True, verbose_name='file_name')),
                ('mime_type', models.TextField(blank=True, verbose_name='mime_type')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='video', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('address', models.TextField(verbose_name='address')),
                ('foursquare_id', models.TextField(blank=True, verbose_name='foursquare_id')),
                ('foursquare_type', models.TextField(blank=True, verbose_name='foursquare_type')),
                ('google_place_id', models.TextField(blank=True, verbose_name='google_place_id')),
                ('google_place_type', models.TextField(blank=True, verbose_name='google_place_type')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='venue', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='SuccessfulPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.TextField(verbose_name='currency')),
                ('total_amount', models.IntegerField(verbose_name='total_amount')),
                ('invoice_payload', models.TextField(verbose_name='invoice_payload')),
                ('shipping_option_id', models.TextField(blank=True, verbose_name='invoice_payload')),
                ('telegram_payment_charge_id', models.TextField(verbose_name='telegram_payment_charge_id')),
                ('provider_payment_charge_id', models.TextField(verbose_name='provider_payment_charge_id')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='successful_payment', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('width', models.IntegerField(verbose_name='width')),
                ('height', models.IntegerField(verbose_name='height')),
                ('is_animated', models.BooleanField(verbose_name='is_animated')),
                ('emoji', models.TextField(blank=True, verbose_name='emoji')),
                ('set_name', models.TextField(blank=True, verbose_name='set_name')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='sticker', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.TextField(verbose_name='country_code')),
                ('state', models.TextField(verbose_name='state')),
                ('city', models.TextField(verbose_name='city')),
                ('street_line1', models.TextField(verbose_name='street_line1')),
                ('street_line2', models.TextField(verbose_name='street_line2')),
                ('post_code', models.TextField(verbose_name='post_code')),
                ('order_info', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='andr_update.orderinfo')),
                ('shipping_query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='andr_update.shippingquery')),
            ],
        ),
        migrations.CreateModel(
            name='ProximityAlertTriggered',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField(verbose_name='distance')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='proximity_alert_triggered', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.TextField(verbose_name='file_id')),
                ('file_unique_id', models.TextField(verbose_name='file_unique_id')),
                ('width', models.IntegerField(verbose_name='width')),
                ('height', models.IntegerField(verbose_name='height')),
                ('file_size', models.IntegerField(blank=True, verbose_name='file_size')),
                ('animation', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.animation')),
                ('audio', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.audio')),
                ('chat_photo_message', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_chat_photo', to='andr_update.message')),
                ('document', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.document')),
                ('game', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='andr_update.game')),
                ('message', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='andr_update.message')),
                ('sticker', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.sticker')),
                ('video', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.video')),
                ('video_note', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumb', to='andr_update.videonote')),
            ],
        ),
        migrations.CreateModel(
            name='PassportFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_passport_element', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='andr_update.encryptedpassportelement')),
                ('encrypted_passport_element_front', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='front_side', to='andr_update.encryptedpassportelement')),
                ('encrypted_passport_element_reverse', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='reverse_side', to='andr_update.encryptedpassportelement')),
                ('encrypted_passport_element_selfie', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='selfie', to='andr_update.encryptedpassportelement')),
                ('encrypted_passport_element_translation', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='translation', to='andr_update.encryptedpassportelement')),
            ],
        ),
        migrations.CreateModel(
            name='PassportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='passport_data', to='andr_update.message')),
            ],
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='pre_checkout_query',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_info', to='andr_update.precheckoutquery'),
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='successful_paayment',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_info', to='andr_update.successfulpayment'),
        ),
        migrations.CreateModel(
            name='MessageEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(verbose_name='type')),
                ('offset', models.IntegerField(verbose_name='offset')),
                ('length', models.IntegerField(verbose_name='length')),
                ('url', models.TextField(blank=True, verbose_name='url')),
                ('language', models.TextField(blank=True, verbose_name='language')),
                ('game', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='text_entities', to='andr_update.game')),
                ('message', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='caption_entities', to='andr_update.message')),
                ('poll', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='explanation_entities', to='andr_update.game')),
            ],
        ),
        migrations.CreateModel(
            name='MaskPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.TextField(verbose_name='point')),
                ('x_shift', models.FloatField(verbose_name='x_shift')),
                ('y_shift', models.FloatField(verbose_name='y_shift')),
                ('scale', models.FloatField(verbose_name='scale')),
                ('sticker', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='mask_position', to='andr_update.sticker')),
            ],
        ),
        migrations.CreateModel(
            name='LoginUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField(verbose_name='url')),
                ('forward_text', models.TextField(blank=True, verbose_name='forward_text')),
                ('bot_username', models.TextField(blank=True, verbose_name='bot_username')),
                ('request_write_access', models.BooleanField(blank=True, verbose_name='request_write_access')),
                ('inline_keyboard_button', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='login_url', to='andr_update.inlinekeyboardbutton')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.FloatField(verbose_name='longitude')),
                ('latitude', models.FloatField(verbose_name='latitude')),
                ('horizontal_accuracy', models.FloatField(blank=True, verbose_name='horizontal_accuracy')),
                ('live_period', models.IntegerField(blank=True, verbose_name='live_period')),
                ('heading', models.IntegerField(blank=True, verbose_name='heading')),
                ('proximity_alert_radius', models.IntegerField(blank=True, verbose_name='proximity_alert_radius')),
                ('chat_location', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.chatlocation')),
                ('choseninlineresult', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.choseninlineresult')),
                ('inlinequery', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.inlinequery')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.message')),
                ('venue', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='andr_update.venue')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('start_parameter', models.TextField(verbose_name='start_parameter')),
                ('currency', models.TextField(verbose_name='currency')),
                ('total_amount', models.IntegerField(verbose_name='total_amount')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='InlineKeyboardMarkup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_markup', to='andr_update.message')),
            ],
        ),
        migrations.AddField(
            model_name='inlinekeyboardbutton',
            name='markup',
            field=models.ManyToManyField(related_name='inline_keyboard', to='andr_update.InlineKeyboardMarkup'),
        ),
        migrations.AddField(
            model_name='game',
            name='message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='game', to='andr_update.message'),
        ),
        migrations.AddField(
            model_name='encryptedpassportelement',
            name='passport_data',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='data', to='andr_update.passportdata'),
        ),
        migrations.CreateModel(
            name='EncryptedCredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(verbose_name='data')),
                ('hash', models.TextField(verbose_name='hash')),
                ('secret', models.TextField(verbose_name='secret')),
                ('passport_data', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='andr_update.passportdata')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='document', to='andr_update.message'),
        ),
        migrations.CreateModel(
            name='Dice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.TextField(verbose_name='emoji')),
                ('value', models.IntegerField(verbose_name='value')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='dice', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.TextField(verbose_name='phone_number')),
                ('first_name', models.TextField(verbose_name='first_name')),
                ('last_name', models.TextField(blank=True, verbose_name='last_name')),
                ('user_id', models.IntegerField(blank=True, verbose_name='user_id')),
                ('vcard', models.TextField(blank=True, verbose_name='vcard')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='andr_update.message')),
            ],
        ),
        migrations.CreateModel(
            name='ChatPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small_file_id', models.TextField(verbose_name='small_file_id')),
                ('small_file_unique_id', models.TextField(verbose_name='small_file_unique_id')),
                ('big_file_id', models.TextField(verbose_name='big_file_id')),
                ('big_file_unique_id', models.TextField(verbose_name='big_file_unique_id')),
                ('chat', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='andr_update.chat')),
            ],
        ),
        migrations.CreateModel(
            name='ChatPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_send_messages', models.BooleanField(blank=True, verbose_name='can_send_messages')),
                ('can_send_media_messages', models.BooleanField(blank=True, verbose_name='can_send_media_messages')),
                ('can_send_polls', models.BooleanField(blank=True, verbose_name='can_send_polls')),
                ('can_send_other_messages', models.BooleanField(blank=True, verbose_name='can_send_other_messages')),
                ('can_add_web_page_previews', models.BooleanField(blank=True, verbose_name='can_add_web_page_previews')),
                ('can_change_info', models.BooleanField(blank=True, verbose_name='can_change_info')),
                ('can_invite_users', models.BooleanField(blank=True, verbose_name='can_invite_users')),
                ('can_pin_messages', models.BooleanField(blank=True, verbose_name='can_pin_messages')),
                ('chat', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='andr_update.chat')),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='forwarder_chat',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='forward_from_chat', to='andr_update.message'),
        ),
        migrations.AddField(
            model_name='chat',
            name='message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat', to='andr_update.message'),
        ),
        migrations.AddField(
            model_name='chat',
            name='receiver_message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender_chat', to='andr_update.message'),
        ),
        migrations.CreateModel(
            name='CallbackGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inline_keyboard_button', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='callback_game', to='andr_update.inlinekeyboardbutton')),
            ],
        ),
        migrations.AddField(
            model_name='audio',
            name='message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='audio', to='andr_update.message'),
        ),
        migrations.AddField(
            model_name='animation',
            name='game',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='animation', to='andr_update.game'),
        ),
        migrations.AddField(
            model_name='animation',
            name='message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='animation', to='andr_update.message'),
        ),
        migrations.CreateModel(
            name='Andruser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(verbose_name='user_id')),
                ('is_bot', models.BooleanField(verbose_name='is_bot')),
                ('first_name', models.TextField(verbose_name='first_name')),
                ('last_name', models.TextField(blank=True, verbose_name='last_name')),
                ('username', models.TextField(blank=True, verbose_name='username')),
                ('language_code', models.TextField(blank=True, verbose_name='language_code')),
                ('can_join_groups', models.BooleanField(blank=True, verbose_name='can_join_groups')),
                ('can_read_all_group_messages', models.BooleanField(blank=True, verbose_name='can_read_all_group_messages')),
                ('supports_inline_queries', models.BooleanField(blank=True, verbose_name='supports_inline_queries')),
                ('bot_sender', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='via_bot', to='andr_update.message')),
                ('callback_query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='callback_query_from', to='andr_update.callbackquery')),
                ('chat_leaving_member_message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='left_chat_member', to='andr_update.message')),
                ('chat_members_message', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_chat_members', to='andr_update.message')),
                ('chosen_inline_result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chosen_inline_result_from', to='andr_update.choseninlineresult')),
                ('entity_mention', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='andr_update.message')),
                ('forwarder', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='forward_from', to='andr_update.message')),
                ('inline_query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inline_query_from', to='andr_update.inlinequery')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_from', to='andr_update.message')),
                ('pre_checkout_query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pre_checkout_query_from', to='andr_update.precheckoutquery')),
                ('proximity_alert_for_traveler', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='traveler', to='andr_update.proximityalerttriggered')),
                ('proximity_alert_for_watcher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='watcher', to='andr_update.proximityalerttriggered')),
                ('shipping_query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_query_from', to='andr_update.shippingquery')),
            ],
        ),
        migrations.AddField(
            model_name='shippingquery',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipping_query', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='precheckoutquery',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_checkout_query', to='andr_update.update'),
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poll_id', models.TextField(verbose_name='poll_id')),
                ('update', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='poll_answer', to='andr_update.update')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.TextField(verbose_name='_id')),
                ('question', models.CharField(max_length=300, verbose_name='_id')),
                ('total_voter_count', models.IntegerField(verbose_name='total_voter_count')),
                ('is_closed', models.BooleanField(verbose_name='is_closed')),
                ('is_anonymous', models.BooleanField(verbose_name='is_anonymous')),
                ('type', models.TextField(verbose_name='type')),
                ('allows_multiple_answers', models.BooleanField(verbose_name='allows_multiple_answers')),
                ('correct_option_id', models.IntegerField(blank=True, verbose_name='correct_option_id')),
                ('explanation', models.CharField(blank=True, max_length=100, verbose_name='explanation')),
                ('open_period', models.IntegerField(blank=True, verbose_name='open_period')),
                ('close_date', models.IntegerField(blank=True, verbose_name='close_date')),
                ('message', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='poll', to='andr_update.message')),
                ('update', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='poll', to='andr_update.update')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='message',
            name='update_for_this_channel_post',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='channel_post', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='message',
            name='update_for_this_edited_channel_post',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_channel_post', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='message',
            name='update_for_this_edited_message',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='edited_message', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='inlinequery',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='inline_query', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='choseninlineresult',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='chosen_inline_result', to='andr_update.update'),
        ),
        migrations.AddField(
            model_name='callbackquery',
            name='update',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='callback_query', to='andr_update.update'),
        ),
    ]
